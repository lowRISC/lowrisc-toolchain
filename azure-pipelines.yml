# Azure Pipelines CI build configuration
# Documentation at https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - 'master'
  tags:
    include:
    - '*'
pr:
  branches:
    include:
    - '*'

jobs:
- job: "Toolchains_RV32IMCB"
  displayName: "Toolchains targeting Ibex with bit-manipulation extensions"
  # These builds are using the ratified bitmanip extensions, version 1.0: Zba,
  # Zbb, Zbc, and Zbs. For the current version of Clang we need to specify them
  # as version 0.93, but they should be equivalent.
  pool:
    vmImage: "ubuntu-20.04"
  container: lowrisc/lowrisc-base-centos6:latest
  timeoutInMinutes: 360
  steps:
  - template: "_build-deps.yml"

  - bash: |
      sudo mkdir -p /tools/riscv
      sudo chmod 0777 /tools/riscv
    displayName: "Prepare toolchain destination directory"

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-rv32imcb" \
        "riscv32-unknown-elf" \
        "/tools/riscv" \
        "rv32imc_zba_zbb_zbc_zbs" \
        "ilp32" "medany"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - bash: |
      ./build-clang-with-args.sh \
        "lowrisc-toolchain-rv32imcb" \
        "riscv32-unknown-elf" \
        "/tools/riscv" \
        "rv32imc_zba0p93_zbb0p93_zbc0p93_zbs0p93" \
        "ilp32" "medany" "-menable-experimental-extensions"
    displayName: "Build Clang toolchain"
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - template: "_upload-artifacts.yml"
    parameters:
      azure_name: rv32imcb-toolchains

- job: "Toolchains_RV64IMAC"
  displayName: "GCC and Clang/LLVM toolchains targeting RV64IMAC (Muntjac)"
  pool:
    vmImage: "ubuntu-20.04"
  container: lowrisc/lowrisc-base-centos6:latest
  timeoutInMinutes: 360
  steps:
  - template: "_build-deps.yml"

  - bash: |
      sudo mkdir -p /tools/riscv
      sudo chmod 0777 /tools/riscv
    displayName: "Prepare toolchain destination directory"

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-rv64imac" \
        "riscv64-unknown-elf" \
        "/tools/riscv" \
        "rv64imac" "lp64" "medany"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - bash: |
      ./build-clang-with-args.sh \
        "lowrisc-toolchain-rv64imac" \
        "riscv64-unknown-elf" \
        "/tools/riscv" \
        "rv64imac" "lp64" "medany"
    displayName: "Build Clang toolchain"
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - template: "_upload-artifacts.yml"
    parameters:
      azure_name: rv64imac-toolchains

- job: "GCC_Multilib_Baremetal"
  displayName: "RV64 GCC (Multilib Baremetal)"
  condition: false
  pool:
    vmImage: "ubuntu-16.04"
  timeoutInMinutes: 360
  steps:
  - template: "_build-deps.yml"

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-baremetal" \
        "riscv64-unknown-elf" \
        "/opt/riscv-baremetal-toolchain"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - bash: |
      ./build-clang-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-baremetal" \
        "riscv64-unknown-elf" \
        "/opt/riscv-baremetal-toolchain"
    displayName: "Build Clang toolchain"
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - template: "_upload-artifacts.yml"
    parameters:
      azure_name: gcc-multilib-baremetal

- job: "GCC_Multilib_Linux"
  displayName: "RV64 GCC (Multilib Linux)"
  condition: false
  pool:
    vmImage: "ubuntu-20.04"
  container: lowrisc/lowrisc-base-centos6:latest
  timeoutInMinutes: 360
  steps:
  - template: "_build-deps.yml"

  - bash: |
      sudo mkdir -p /tools/riscv
      sudo chmod 0777 /tools/riscv
    displayName: "Prepare toolchain destination directory"

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-linux" \
        "riscv64-unknown-linux-gnu" \
        "/opt/riscv-linux-toolchain"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - bash: |
      ./build-clang-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-linux" \
        "riscv64-unknown-linux-gnu" \
        "/opt/riscv-linux-toolchain"
    displayName: "Build Clang toolchain"
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      RELEASE_TAG: $(ReleaseTag)

  - template: "_upload-artifacts.yml"
    parameters:
      azure_name: gcc-multilib-linux
