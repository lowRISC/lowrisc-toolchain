steps:
- publish: $(Build.ArtifactStagingDirectory)
  artifact: ${{ parameters.azure_name }}
  displayName: "Upload Azure Artifact"

# This comes after uploading azure artifacts so we can debug the azure artifact
# if this step fails.
- bash: |
    for f in ${ARTIFACT_STAGING_DIR}/*.tar.xz; do ./check-tarball.sh "$f"; done
  env:
    ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
  displayName: "Checking Artifact Tarballs"

- task: GithubRelease@0
  displayName: 'Upload GitHub Release (if tagged)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    gitHubConnection: lowrisc-artifact-upload
    repositoryName: lowrisc/lowrisc-toolchains
    tagSource: manual
    tag: "$(ReleaseTag)"
    action: edit
    addChangeLog: false
    assetUploadMode: replace
    isPreRelease: true
    # To ensure assets match the tag we're uploading to, we only upload assets
    # that end with `$(ReleaseTag).tar.xz`
    assets: |
      $(Build.ArtifactStagingDirectory)/*-$(ReleaseTag).tar.xz
